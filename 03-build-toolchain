#!/bin/bash

#----------------------------------------------------------------------------#
#  __    _____ _____
# |  |  |   __|   __|
# |  |__|   __|__   |
# |_____|__|  |_____|
#
# Automate LFS Build
#----------------------------------------------------------------------------#
# (C) 2019-2022 Ranjith Gowda, Jansen Price
# https://github.com/ranjithum/automate-lfs-build
#----------------------------------------------------------------------------#
# Usage: ./03-build-toolchain
# This script must be run as the lfs user and will perform all the
# downloading of specific versions of packages and compile the toolchain.
#----------------------------------------------------------------------------#

REPO_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
source $REPO_ROOT/common/common_utils
source $REPO_ROOT/common/common_source

if [ "$(id -u)" = 0 ]; then
    fatal "You must run script $0 as lfs user"
fi

validate_environment()
{
    # TODO - Validate environment variables
    has_errors=0
    if [ "$PATH" != "/tools/bin:/bin:/usr/bin" ]; then
        error "Env PATH should be /tools/bin:/bin:/usr/bin"
        has_errors=1
    fi

    if [ -z "$LFS" ]; then
        error "LFS environment variable not set"
        has_errors=1
    fi

    if [ -z "$LFS_TGT" ]; then
        error "LFS_TGT environment variable not set"
        has_errors=1
    fi

    if [ $has_errors -eq 1 ]; then
        fatal "Correct errors above and retry"
    fi
}

build_toolchain()
{
    echo "-------------- LFS TOOLCHAIN --------------"
    echo "Beginning process to build toolchain"
    echo "There are $(ls toolchain | wc -l) total steps to complete"
    echo "Sources are downloaded to $SRCDIR"
    echo "Logs are in $LOGPATH"
    echo "Completed steps are written to $FILE_DB"
    echo "-------------------------------------------"

    for script in $(ls toolchain/)
    do
        info "BEGIN $script - $(zdate)"
        sh $(dirname $0)/toolchain/"$script"
        if [ $? -ne 0 ]; then
            fatal "Execution of $script failed."
        fi
    done
    info "END - $(zdate)"
}

validate_environment
build_toolchain

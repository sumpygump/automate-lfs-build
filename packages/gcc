#!/bin/bash

source "$(dirname "$0")"/../common/common_source

NAME=gcc
VERSION=$GCC_VER
TARFILE=$NAME-$VERSION.tar.xz
FETCH_URL="https://ftp.gnu.org/gnu/gcc/gcc-$VERSION/$TARFILE"
mSBU=164000

patchup()
{
    cd "$WORKBENCH/$NAME-$VERSION"

    {
    # Fix an issue breaking libasan.a with glibc-2.34
    sed -e '/static.*SIGSTKSZ/d' \
        -e 's/return kAltStackSize/return SIGSTKSZ * 4/' \
        -i libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp

    # change default directory for 64-ibt libraries to lib
    case $(uname -m) in
      x86_64)
        sed -e '/m64=/s/lib64/lib/' \
            -i.orig gcc/config/i386/t-linux64
      ;;
    esac
    } >>"$LOGFILE" 2>&1
}

configure()
{
    cd "$WORKBENCH/$NAME-$VERSION"
    mkdir build; cd build; BUILD_PATH=$(pwd)

    ../configure --prefix=/usr \
        LD=ld \
        --enable-languages=c,c++ \
        --disable-multilib \
        --disable-bootstrap \
        --with-system-zlib >>"$LOGFILE" 2>&1
}

post_build()
{
    # Tests take too long; skip
    :
    #{
    #ulimit -s 32768
    #chown -Rv tester .
    #su tester -c "PATH=$PATH make -k check"
    #} >>"$LOGFILE" 2>&1
}

post_install()
{
    {
    # Remove an uneeded directory
    rm -rf /usr/lib/gcc/$(gcc -dumpmachine)/$VERSION/include-fixed/bits/

    # Change ownership back to root
    chown -v -R root:root \
        /usr/lib/gcc/*linux-gnu/$VERSION/include{,-fixed}

    # Create symbolic link for FHS historical reasons
    ln -svr /usr/bin/cpp /usr/lib

    # Compatibility symlink for building programs with LTO
    ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/$VERSION/liblto_plugin.so \
        /usr/lib/bfd-plugins/
    } >>"$LOGFILE" 2>&1
}

test_build()
{
    {
    echo 'int main(){}' > dummy.c
    cc dummy.c -v -Wl,--verbose &> dummy.log
    if [ ! readelf -l a.out | grep ': /lib' ]; then
        return 1
    fi

    if [ ! grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log ]; then
        return 1
    fi

    if [ ! grep -B4 '^ /usr/include' dummy.log ]; then
        return 1
    fi

    grep 'SEARCH.*/usr/lib' dummy.log | sed 's|; |\n|g'

    if [ ! grep "/lib.*/libc.so.6 " dummy.log ]; then
        return 1
    fi

    if [ ! grep found dummy.log ]; then
        return 1
    fi

    rm -v dummy.c a.out dummy.log

    # Move a misplaced file
    mkdir -pv /usr/share/gdb/auto-load/usr/lib
    mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib
    }  >>"$LOGFILE" 2>&1

}

source "$(dirname "$0")"/../common/common_exec

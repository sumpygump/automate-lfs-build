#!/bin/bash

#----------------------------------------------------------------------------#
#  __    _____ _____
# |  |  |   __|   __|
# |  |__|   __|__   |
# |_____|__|  |_____|
#
# Automate LFS Build
#----------------------------------------------------------------------------#
# (C) 2019-2022 Ranjith Gowda, Jansen Price
# https://github.com/ranjithum/automate-lfs-build
#----------------------------------------------------------------------------#
# Usage: ./02-setup-lfs-user
# This script should be run as root user to create the lfs user which will be
# used to compile the toolchain packages in the next step.
#----------------------------------------------------------------------------#

REPO_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
. $REPO_ROOT/common/common_utils

assert_is_root()
{
    if [ "$EUID" -ne 0 ]; then
        fatal "Please run as root user. (Use \`sudo su - root\`)"
    fi
}

validate_lfs_mountpoint()
{
    if [ -z "$LFS" ]; then
        fatal "LFS env is empty.. Please export LFS environment variable"
    fi

    if [ -z "$STRICTMOUNTPOINTCHECK" ]; then
        return
    fi

    if ! mountpoint -q "$LFS"; then
        fatal "$LFS directory is not mounted anywhere.. exiting"
    fi
}

setup_lfs_user()
{
    printf "Setting up lfs user and group ..."

    groupadd -f lfs

    # Create the user
    if ! id -u lfs >/dev/null 2>&1; then
        useradd -s /bin/bash -g lfs -m -k /dev/null lfs
        echo 'lfs:lfs'| chpasswd
    fi

    chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}
    case $(uname -m) in
        x86_64) chown -v lfs $LFS/lib64 ;;
    esac

    # Set up tools and sources at LFS root
    [ ! -d "$LFS"/tools ] && mkdir -p "$LFS"/tools
    [ ! -d "$LFS"/sources ] && mkdir -p "$LFS"/sources
    [ ! -L /tools ] && ln -s "$LFS"/tools /
    [ ! -L /sources ] && ln -s "$LFS"/sources /
    chown lfs:lfs "$LFS"
    chown lfs:lfs -R "$LFS"/tools "$LFS"/sources

    # Set up link and permissions to the build repo
    [ -L /home/lfs/automate-lfs-build ] && rm /home/lfs/automate-lfs-build
    ln -s $REPO_ROOT /home/lfs/automate-lfs-build
    chown -h lfs:lfs /home/lfs/automate-lfs-build
    chown lfs $REPO_ROOT
    chmod -R a+rX $REPO_ROOT

    echo "done"
}

setup_lfs_bash()
{
    printf "Setting up bash for lfs user ..."

    # Create bash_profile
    cat > /home/lfs/.bash_profile << EOF
exec env -i HOME=\$HOME TERM=\$TERM PS1='\u:\w\$ ' /bin/bash
EOF
    chown lfs:lfs /home/lfs/.bash_profile

    # Create bashrc
    cat > /home/lfs/.bashrc << EOF
set +h
umask 022
LFS=$LFS
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/usr/bin
if [ ! -L /bin ]; then PATH=/bin:\$PATH; fi
PATH=\$LFS/tools/bin:\$PATH
CONFIG_SITE=\$LFS/usr/share/config.site
export LFS LC_ALL LFS_TGT PATH CONFIG_SITE
EOF
    chown lfs:lfs /home/lfs/.bashrc

    echo "done"
}

setup_dirs()
{
    printf "Setting up dirs for lfs toolchain ..."

    mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin}

    for i in bin lib sbin; do
        [ ! -L $LFS/$i ] && ln -svf usr/$i $LFS/$i
    done

    case $(uname -m) in
        x86_64) mkdir -pv $LFS/lib64 ;;
    esac

    echo "done"
}

# -----------------
# Main
# -----------------

assert_is_root
validate_lfs_mountpoint
echo "---------------- LFS SETUP ----------------"
setup_dirs
setup_lfs_user
setup_lfs_bash
echo "-------------------------------------------"

success "Next step:"
success "  login as user lfs using \`su - lfs\`"
success "  then \`cd ~/automate-lfs-build\`"
success "  and execute \`./03-build-toolchain\`"
echo
